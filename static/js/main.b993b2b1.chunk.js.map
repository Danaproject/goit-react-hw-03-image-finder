{"version":3,"sources":["components/services/images-api.jsx","components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","components/ModalImage/ModalImage.jsx","components/Container/Container.jsx","components/Loader/Loader.jsx","components/NoImages/Album.png","App.js","components/NoImages/NoImages.jsx","index.js"],"names":["axios","defaults","baseURL","fetchImages","searchQuery","page","get","then","response","data","hits","propTypes","PropTypes","string","isRequired","number","Searchbar","state","query","handleChange","e","setState","currentTarget","value","trim","handleSubmit","preventDefault","props","onSubmit","toast","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","images","onImageClick","map","id","tags","webformatURL","largeImageURL","onClick","src","alt","data-url","ImageGallery","Button","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","event","target","window","addEventListener","removeEventListener","createPortal","children","ModalImage","Container","Loader","color","height","width","timeout","App","isLoading","showModal","onChangeQuery","options","imagesApi","prevState","length","catch","error","console","log","finally","scrollTo","top","documentElement","scrollHeight","behavior","dataset","url","toggleModal","onModalImageClose","prevProps","shouldRenderLoadMoreButton","Album","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b993b2b1.chunk.js","sourcesContent":["import axios from 'axios';\nimport PropTypes from 'prop-types';\n\n// axios.defaults.headers.common['Authorization'] =\n//   'Bearer 20473685-97e7769accc1d65c6975902f8';\n\nconst apiKey = '20473685-97e7769accc1d65c6975902f8';\naxios.defaults.baseURL = 'https://pixabay.com/api/';\n\nconst fetchImages = ({ searchQuery = '', page = 1 }) => {\n  return axios\n    .get(\n      `?q=${searchQuery}&page=${page}&image_type=photo&orientation=horizontal&per_page=12&key=${apiKey}`,\n    )\n    .then(response => response.data.hits);\n};\n\nfetchImages.propTypes = {\n  searchQuery: PropTypes.string.isRequired,\n  page: PropTypes.number.isRequired,\n};\n\nexport default { fetchImages };\n","import { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport './Searchbar.scss';\n\nclass Searchbar extends Component {\n  state = {\n    query: '',\n  };\n\n  handleChange = e => {\n    this.setState({ query: e.currentTarget.value.trim() });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    if (this.state.query.trim() === '') {\n      toast('Please enter somenthing!');\n      return;\n    }\n    this.props.onSubmit(this.state.query);\n    this.setState({ query: '' });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form onSubmit={this.handleSubmit} className=\"SearchForm\">\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={this.state.query}\n            onChange={this.handleChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\nexport default Searchbar;\n","import PropTypes from 'prop-types';\nimport './ImageGallery.scss';\n\nconst ImageGalleryItem = ({ images, onImageClick }) =>\n  images.map(({ id, tags, webformatURL, largeImageURL }) => (\n    <li key={id} onClick={onImageClick} className=\"ImageGalleryItem\">\n      <img\n        src={webformatURL}\n        alt={tags}\n        data-url={largeImageURL}\n        className=\"ImageGalleryItem-image\"\n      />\n    </li>\n  ));\n\nImageGalleryItem.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      tags: PropTypes.string.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default ImageGalleryItem;\n","import ImageGalleryItem from './ImageGalleryItem';\nimport './ImageGallery.scss';\n\nconst ImageGallery = ({ images, onImageClick }) => (\n  <ul className=\"ImageGallery\">\n    <ImageGalleryItem images={images} onImageClick={onImageClick} />\n  </ul>\n);\n\nexport default ImageGallery;\n","import PropTypes from 'prop-types';\nimport './Button.scss';\n\nconst Button = ({ onClick }) => (\n  <button type=\"button\" onClick={onClick} className=\"Button\">\n    Load more\n  </button>\n);\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\nexport default Button;\n","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport './Modal.scss';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">{this.props.children}</div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport './ModalImage.scss';\n\nconst ModalImage = ({ largeImageURL, tags }) => (\n  <img src={largeImageURL} alt={tags} className=\"ModalImage\" />\n);\n\nModalImage.propTypes = {\n  largeImageURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n};\nexport default ModalImage;\n","import './Container.scss';\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;\n","import { Component } from 'react';\nimport Spinner from 'react-loader-spinner';\nimport '../../../node_modules/react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport './Loader.scss';\n\nexport default class Loader extends Component {\n  render() {\n    return (\n      <Spinner\n        type=\"ThreeDots\"\n        color=\"#3f51b5\"\n        height={100}\n        width={100}\n        timeout={3000}\n        className=\"Loader\"\n      />\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/Album.88d5c698.png\";","import { Component } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport imagesApi from './components/services/images-api';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal';\nimport ModalImage from './components/ModalImage';\nimport Container from './components/Container';\nimport Loader from './components/Loader';\nimport 'react-toastify/dist/ReactToastify.css';\nimport NoImages from './components/NoImages';\n\nclass App extends Component {\n  state = {\n    images: [],\n    searchQuery: '',\n    page: 1,\n    isLoading: false,\n    showModal: false,\n    largeImageURL: '',\n    tags: '',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchImages();\n    }\n  }\n\n  onChangeQuery = query => {\n    this.setState({\n      searchQuery: query,\n      page: 1,\n      images: [],\n    });\n  };\n\n  fetchImages = () => {\n    const { searchQuery, page } = this.state;\n    const options = { searchQuery, page };\n\n    this.setState({ isLoading: true });\n\n    imagesApi\n      .fetchImages(options)\n      .then(images => {\n        this.setState(prevState => ({\n          images: [...prevState.images, ...images],\n          page: prevState.page + 1,\n        }));\n\n        if (!images.length) {\n          toast('Sorry, nothing to show!');\n        }\n      })\n      .catch(error => {\n        console.log(error);\n        toast.error('Oops, something went wrong!');\n      })\n      .finally(() => {\n        this.setState({ isLoading: false });\n        page > 1 &&\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n          });\n      });\n  };\n\n  onImageClick = e => {\n    this.setState({\n      largeImageURL: e.target.dataset.url,\n      tags: e.target.alt,\n    });\n\n    this.toggleModal();\n  };\n\n  onModalImageClose = e => {\n    const { largeImageURL } = this.state;\n    largeImageURL && this.setState(() => ({ largeImageURL: '' }));\n    this.toggleModal();\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  render() {\n    const { images, isLoading, showModal, largeImageURL, tags } = this.state;\n    const shouldRenderLoadMoreButton = images.length > 0 && !isLoading;\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.onChangeQuery} />\n\n        <Container>\n          <ImageGallery images={images} onImageClick={this.onImageClick} />\n\n          {isLoading && <Loader />}\n          {!images.length && NoImages()}\n          {shouldRenderLoadMoreButton && <Button onClick={this.fetchImages} />}\n\n          {showModal && (\n            <Modal onClose={this.onModalImageClose}>\n              <ModalImage largeImageURL={largeImageURL} tags={tags} />\n            </Modal>\n          )}\n          <ToastContainer autoClose={3000} />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import Album from './Album.png';\nimport './NoImages.scss';\n\nexport default function NoImages() {\n  return (\n    <div>\n      <img src={Album} alt=\"Album\" className=\"NoImages\" />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}